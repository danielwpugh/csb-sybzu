{"version":3,"sources":["add-term.js","index.js"],"names":["AddTerm","Fragment","class","onClick","e","props","onAddTerm","Component","courseList1","name","content","id","difficulty","credits","category","courseList2","courseList3","courseList4","courseList5","courseList6","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","move","state","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","terms","map","term","droppableId","courseList","App","includeInTotal","creditTotal","creditTotals","firstSemester","secondSemester","thirdSemester","fourthSemester","fifthSemester","id2List","sixthSemester","getList","find","onDragEnd","items","setState","calculateCourseCreditTotal","filter","t","length","this","courseCredits","course","totalCourseCreditsForTerm","reduce","n","val","termToDelete","bin","newTerms","console","log","push","provided","snapshot","className","ref","innerRef","style","isDraggingOver","background","borderRadius","padding","margin","width","deleteTerm","draggableId","toString","join","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","grid","toLocaleString","currency","minimumFractionDigits","maximumFractionDigits","renderTerm","a","b","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a31a834.chunk.js","sourcesContent":["import \"./styles.css\";\n\nimport React, { Component } from \"react\";\n\nexport class AddTerm extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <button class=\"addTermButton\" onClick={(e) => this.props.onAddTerm()}>\n          + Add another term\n        </button>\n      </React.Fragment>\n    );\n  }\n}\n","import \"./styles.css\";\n\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { AddTerm } from \"./add-term\";\n\n// course lists\nconst courseList1 = [\n  {\n    name: \"IDSN530\",\n    content: \"Technology Essentials\",\n    id: 530,\n    difficulty: 5,\n    credits: 3,\n    category: \"essentials\"\n  },\n  {\n    name: \"IDSN540\",\n    content: \"Processes & Perspectives\",\n    id: 540,\n    difficulty: 4,\n    credits: 4,\n    category: \"core\"\n  },\n  {\n    name: \"IDSN510\",\n    content: \"Integrated Practices Residential\",\n    id: 510,\n    difficulty: 5,\n    credits: 2,\n    category: \"residential\"\n  }\n];\n\nconst courseList2 = [\n  {\n    name: \"IDSN525\",\n    content: \"Business Essentials\",\n    id: 525,\n    difficulty: 3,\n    credits: 3,\n    category: \"essentials\"\n  },\n  {\n    name: \"IDSN560\",\n    content: \"Narrative and Storytelling\",\n    id: 560,\n    difficulty: 5,\n    credits: 4,\n    category: \"core\"\n  }\n];\n\nconst courseList3 = [\n  {\n    name: \"IDSNXXX\",\n    content: \"Elective Credit\",\n    id: 591,\n    difficulty: 0,\n    credits: 3,\n    category: \"elective\"\n  },\n  {\n    name: \"IDSN550\",\n    content: \"Opportunity and Uncertainty\",\n    id: 550,\n    difficulty: 4,\n    credits: 4,\n    category: \"core\"\n  },\n  {\n    name: \"IDSN545\",\n    content: \"Integrative Project\",\n    id: 545,\n    difficulty: 3,\n    credits: 2,\n    category: \"lab\"\n  }\n];\n\nconst courseList4 = [\n  {\n    name: \"IDSNXXX\",\n    content: \"Elective Credit\",\n    id: 592,\n    difficulty: 0,\n    credits: 3,\n    category: \"elective\"\n  },\n  {\n    name: \"IDSNXXX\",\n    content: \"Elective Credit\",\n    id: 593,\n    difficulty: 0,\n    credits: 3,\n    category: \"elective\"\n  },\n  {\n    name: \"IDSN515\",\n    content: \"Professional Practices Residential\",\n    id: 515,\n    difficulty: 5,\n    credits: 2,\n    category: \"residential\"\n  }\n];\n\nconst courseList5 = [\n  {\n    name: \"IDSNXXX\",\n    content: \"Elective Credit\",\n    id: 594,\n    difficulty: 0,\n    credits: 3,\n    category: \"elective\"\n  },\n  {\n    name: \"IDSN585\",\n    content: \"Capstone\",\n    id: 585,\n    difficulty: 0,\n    credits: 2,\n    category: \"capstone\"\n  }\n];\n\nconst courseList6 = [\n  {\n    name: \"IDSN520\",\n    content: \"Design Essentials\",\n    id: 520,\n    difficulty: 3,\n    credits: 3,\n    category: \"essentials\"\n  },\n  {\n    name: \"IDSNXXX\",\n    content: \"Elective Credit\",\n    id: 595,\n    difficulty: 0,\n    credits: 2,\n    category: \"elective\"\n  }\n];\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  // console.log(list);\n  // console.log(startIndex);\n  // console.log(endIndex);\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (\n  state,\n  source,\n  destination,\n  droppableSource,\n  droppableDestination\n) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n  destClone.splice(droppableDestination.index, 0, removed);\n\n  const result = {};\n\n  let terms = state.terms.map((term) => {\n    if (term.id === droppableSource.droppableId) {\n      term.courseList = sourceClone;\n    }\n    if (term.id === droppableDestination.droppableId) {\n      term.courseList = destClone;\n    }\n    return term;\n  });\n\n  result.terms = terms;\n\n  return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n  borderRadius: \"4px\",\n\n  // change background colour if dragging\n  // background: isDragging ? \"#333\" : \"#555\",\n\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\n\nconst getListStyle = (isDraggingOver) => ({\n  background: isDraggingOver ? \"#444\" : \"#222\",\n  borderRadius: \"8px\",\n  padding: grid,\n  margin: \"2px\",\n  width: 250\n});\n\n// fetch items in each column\nclass App extends Component {\n  state = {\n    terms: [\n      {\n        id: \"term1\",\n        name: \"Term 1\",\n        includeInTotal: true,\n        courseList: courseList1,\n        creditTotal: 0\n      },\n      {\n        id: \"term2\",\n        name: \"Term 2\",\n        includeInTotal: true,\n        courseList: courseList2,\n        creditTotal: 0\n      },\n      {\n        id: \"term3\",\n        name: \"Term 3\",\n        includeInTotal: true,\n        courseList: courseList3,\n        creditTotal: 0\n      },\n      {\n        id: \"term4\",\n        name: \"Term 4\",\n        includeInTotal: true,\n        courseList: courseList4,\n        creditTotal: 0\n      },\n      {\n        id: \"term5\",\n        name: \"Term 5\",\n        includeInTotal: true,\n        courseList: courseList5,\n        creditTotal: 0\n      },\n      {\n        id: \"bin\",\n        name: \"Bin\",\n        includeInTotal: false,\n        courseList: courseList6,\n        creditTotal: 0\n      }\n    ],\n    creditTotals: {\n      firstSemester: 0,\n      secondSemester: 0,\n      thirdSemester: 0,\n      fourthSemester: 0,\n      fifthSemester: 0\n    }\n    // firstSemester: courseList1,\n    // secondSemester: courseList2,\n    // thirdSemester: courseList3,\n    // fourthSemester: courseList4,\n    // fifthSemester: courseList5,\n    // sixthSemester: courseList6\n  };\n\n  componentDidMount() {\n    this.calculateCourseCreditTotal(this.state);\n  }\n\n  /** Convert IDs to a list */\n\n  id2List = {\n    firstSemester: \"firstSemester\",\n    secondSemester: \"secondSemester\",\n    thirdSemester: \"thirdSemester\",\n    fourthSemester: \"fourthSemester\",\n    fifthSemester: \"fifthSemester\",\n    sixthSemester: \"sixthSemester\"\n  };\n\n  calculateCourseCreditTotal() {\n    // Calculate the total here and return it.\n\n    let terms = this.state.terms.map((term) => {\n      let courseCredits = term.courseList.map((course) => course.credits);\n\n      let totalCourseCreditsForTerm = 0;\n\n      if (courseCredits.length) {\n        totalCourseCreditsForTerm = courseCredits.reduce((n, val) => {\n          return n + val;\n        });\n      }\n\n      term.creditTotal = totalCourseCreditsForTerm;\n\n      return term;\n    });\n\n    let state = {\n      terms\n    };\n\n    this.setState(state);\n  }\n\n  getList = (id) => {\n    // console.log(\"idList\", this.id2List);\n    // console.log(\"state\", this.state);\n    // console.log(\"id\", id);\n    // console.log(\"list\", this.state[this.id2List[id]]);\n    return this.state.terms.find((term) => term.id === id).courseList;\n  };\n\n  onDragEnd = (result) => {\n    const { source, destination } = result;\n\n    // console.log('end', source, destination);\n    // console.log(\"source\", source);\n    // console.log(\"dest\", destination);\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const items = reorder(\n        this.getList(source.droppableId),\n        source.index,\n        destination.index\n      );\n\n      // console.log(\"items\", items);\n\n      // Set state\n      let state = { items };\n\n      let terms = this.state.terms.map((term) => {\n        if (term.id === source.droppableId) {\n          term.courseList = items;\n        }\n        return term;\n      });\n\n      state.terms = terms;\n\n      this.setState(state);\n    } else {\n      //console.log(\"source\", source.droppableId);\n      //console.log(\"destination\", destination.droppableId);\n      const result = move(\n        this.state,\n        this.getList(source.droppableId),\n        this.getList(destination.droppableId),\n        source,\n        destination\n      );\n\n      //console.log(\"result\", result);\n      this.setState(result, () => this.calculateCourseCreditTotal());\n    }\n  };\n\n  onAddTerm = () => {\n    let state = {\n      terms: [\n        ...this.state.terms,\n        {\n          id:\n            \"term\" +\n            (this.state.terms.filter((t) => t.includeInTotal).length + 1),\n          name:\n            \"Term \" +\n            (this.state.terms.filter((t) => t.includeInTotal).length + 1),\n          courseList: [],\n          creditTotal: 0,\n          includeInTotal: true\n        }\n      ]\n    };\n\n    this.setState(state);\n  };\n\n  deleteTerm(termToDelete) {\n    let state = {};\n\n    let courseList = [...termToDelete.courseList];\n\n    let terms = this.state.terms.filter(\n      (term) => termToDelete.id !== term.id && term.includeInTotal\n    );\n    let bin = this.state.terms.find((term) => !term.includeInTotal);\n\n    bin.courseList = [...bin.courseList, ...courseList];\n\n    let newTerms = terms.map((term, index) => {\n      console.log(term);\n      term.id = \"term\" + (index + 1);\n      term.name = \"Term \" + (index + 1);\n      return term;\n    });\n\n    newTerms.push(bin);\n\n    state.terms = newTerms;\n\n    this.setState(state, this.calculateCourseCreditTotal());\n  }\n\n  renderTerm(term) {\n    return (\n      <Droppable droppableId={term.id}>\n        {(provided, snapshot) => (\n          <div\n            className=\"semesterBlock\"\n            ref={provided.innerRef}\n            style={getListStyle(snapshot.isDraggingOver)}\n          >\n            <div className=\"semesterName\" onClick={() => this.deleteTerm(term)}>\n              {term.name}\n            </div>\n            {term.courseList.map((course, index) => (\n              <Draggable\n                key={course.id}\n                draggableId={course.id.toString()}\n                index={index}\n              >\n                {(provided, snapshot) => (\n                  <div\n                    className={[\"courseBlock\", course.category].join(\" \")}\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    style={getItemStyle(\n                      snapshot.isDragging,\n                      provided.draggableProps.style\n                    )}\n                  >\n                    <b>{course.name}</b>\n                    &nbsp;\n                    <span className=\"className\">{course.content}</span>\n                    <span className=\"creditNum\">\n                      {course.credits} credits • {course.difficulty}\n                      /5 difficulty\n                    </span>\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            <div className=\"totalCredits\">{term.creditTotal} Credits</div>\n            <div className=\"totalCost\">\n              {(term.creditTotal * 2035).toLocaleString(\"en-US\", {\n                style: \"currency\",\n                currency: \"USD\",\n                minimumFractionDigits: 0,\n                maximumFractionDigits: 0\n              })}\n            </div>\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n\n  // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"allBlocks\">\n          <DragDropContext onDragEnd={this.onDragEnd}>\n            {this.state.terms\n              .filter((t) => t.includeInTotal)\n              .map((term, index) => this.renderTerm(term))}\n            <AddTerm onAddTerm={() => this.onAddTerm()} />\n            {this.state.terms\n              .filter((t) => !t.includeInTotal)\n              .map((term, index) => this.renderTerm(term))}\n          </DragDropContext>\n        </div>\n        <div className=\"course-credit-total\">\n          Degree Credit Total:{\" \"}\n          {this.state.terms\n            .filter((t) => t.includeInTotal)\n            .map((t) => t.creditTotal)\n            .reduce((a, b) => a + b)}\n          /38\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\n// Put the things into the DOM!\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}